<?php
/**
 * Created by PhpStorm.
 * User: BikeVR
 * Date: 2020/10/12
 * Time: 14:12
 * 不需要登陆.
 */

namespace app\apihome\controller;

use org\QRcode;
use think\Controller;
use think\Db;

class Base extends Controller
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $http_type = ((isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') || (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https')) ? 'https://' : 'http://';
        //所有图片路径
        define(__DATAURL__, $http_type.$_SERVER['SERVER_NAME']);
        define(__UEDITORURL__, $http_type.$_SERVER['SERVER_NAME'].'/ueditor/');
        define(__HTTP__, $http_type);
        header("Access-Control-Allow-Origin: *"); 
        header("Access-Control-Allow-Credentials : true"); 
        header("Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Connection, User-Agent, Cookie");
    }

    /*
    *商品列表
     * aj:是否接口返回
     * $tj：推荐类型
     * ￥type:分类
     * key:关键词
     *
    */
    public function getgoodlist($aj, $tj, $type, $key = '', $page = 1, $pagenum = 100, $sid = 0)
    {
        $where['is_show'] = 1; //未隐藏
        $where['is_delete'] = 1; //未删除

        if ($type) {
            $oldtype = Db::name('category')->where('id', $type)->find();
            $where['catid'] = $type;
            if ($oldtype['pid'] == 0) {
                $types = Db::name('category')->where('pid', $type)->field('id')->select();
                $types = array_column($types, 'id');
                $where['catid'] = ['in', $types];
            }
        }
        if ($key) {
            $where['band|title'] = $key;
        }
        if ($tj == 1) {
            $where['is_tj'] = 1;
        }
        if ($tj == 2) {
            $where['is_xs'] = 1;
        }
        if ($sid) {
            $where['sid'] = $sid;
        }
        $limit = intval($page - 1) * $pagenum;
        $goods = Db::name('good')->where($where)
            ->order('sort desc')->limit($limit.','.$pagenum)->select();
        $goodcount = Db::name('good')->where($where)
            ->order('sort desc')->count();

        foreach ($goods as $key => $val) {
            $goods[$key]['pic'] = '';
            if ($val['photo_x']) {
                $img = explode(',', $val['photo_x']);
                $goods[$key]['pic'] = __DATAURL__.$img[0];
            }
            $shop = Db::name('supuser')->where('sid', $val['sid'])->field('sid,shopname,headimgurl')->find();
            if ($shop['headimgurl']) {
                $shop['headimgurl'] = __DATAURL__.$shop['headimgurl'];
            }
            $goods[$key]['shop'] = $shop;
        }
        if ($aj) {
            $data = [
                'good' => $goods,
                'goodnum' => $goodcount,
            ];
            _success('获取成功', '', $data);
        } else {
            return $goods;
        }
    }

    /*
         *商家列表
          * aj:是否接口返回
          * $tj：推荐
          * ￥type:分类
          * key:关键词
          *
         */
    public function getshoplist($aj, $tj, $type, $key = '', $page = 1, $pagenum = 100)
    {
        $where['sid'] = ['>', 0];
        if ($type) {
            $where['type'] = $type;
        }
        if ($key) {
            $where['shopname|nickname'] = $key;
        }
        if ($tj) {
            $where['is_hot'] = 1;
        }

        $limit = intval($page - 1) * $pagenum;
        $shops = Db::name('supuser')->where($where)->order('sort desc')->limit($limit.','.$pagenum)->select();
        $shopsnum = Db::name('supuser')->where($where)->count();
        foreach ($shops as $key => $val) {
            $shops[$key]['xiaoliang'] = 100;
            $shops[$key]['desta'] = '2km';
            $shops[$key]['pic'] = '';
            if ($val['headimgurl']) {
                $shops[$key]['pic'] = __DATAURL__.$val['headimgurl'];
            }
            $b = [];
            if ($val['piccs']) {
                $img = explode(',', $val['piccs']);
                foreach ($img as $k => $v) {
                    $b[] = $v;
                }
            }
            $shops[$key]['pics_arr'] = $b;
            if ($val['bigpic']) {
                $shops[$key]['bigpic'] = $val['bigpic'];
            }
        }
        if ($aj) {
            $data = [
                'shops' => $shops,
                'shopnum' => $shopsnum,
            ];
            _success('获取成功', '', $data);
        } else {
            return $shops;
        }
    }

    /*
     * 商品详情
     */
    public function getgooddet($gid, $f = '*')
    {
        $good = Db::name('good')->where('id', $gid)->field($f)->find();
        if (!$good) {
            return '';
        }
        $n = [];
        if ($good['photo_x']) {
            $img2 = explode(',', $good['photo_x']);
            foreach ($img2 as $k => $v) {
                $n[] = __DATAURL__.$v;
            }
        }
        $good['piccs'] = $n; //图片集1
        $good['indexpic'] = $n['0']; //图片集1
        //图片轮播数组
        $img = explode(',', trim($good['photo_string'], ','));
        $b = [];
        if ($good['photo_string']) {
            foreach ($img as $k => $v) {
                if (strpos($v, 'http') !== false) {
                    $b[] = $v;
                } else {
                    $b[] = __DATAURL__.$v;
                }
            }
        } else {
            $b[] = '';
        }
        $good['img_arr'] = $b; //图片轮播数组
        $content = str_replace('/ueditor/', __UEDITORURL__, $good['content']);
        $good['content'] = $content;

        $good['shop'] = Db::name('supuser')->where('sid', $good['sid'])->field('sid,shopname,headimgurl')->find();
        if ($good['shop']['headimgurl']) {
            $good['shop']['headimgurl'] = __DATAURL__.$good['shop']['headimgurl'];
        }

        return $good;
    }

    /*
    * 商家主营类型
   */
    public function shopcate($sid)
    {
        $types = [];
        $shop = Db::name('supuser')->where('sid', $sid)->find();
        if ($shop['type']) {
            $type = explode(',', $shop['type']);
            $types = Db::name('category')->where('id', 'in', $type)->select();
            foreach ($types as $key => $val) {
                $types[$key]['children'] = Db::name('category')->where('pid', $val['id'])->select();
            }
        }

        return $types;
    }

    /**
     *@return int 返回唯一订单号
     */
    public function randStr($length = 4, $type = 'number')
    {
        $array = [
            'number' => '0123456789',
            'string' => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
            'mixed' => '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ',
        ];
        $string = $array[$type];
        $count = strlen($string) - 1;
        $rand = '';
        for ($i = 0; $i < $length; ++$i) {
            $rand .= $string[mt_rand(0, $count)];
        }

        return $rand;
    }

    public function zfcQrcode($url, $erweima_path)
    {
        $qrcode = new  QRcode();
        $level = 'L';
        $size = 7;
        $qrcode::png($url, $erweima_path, $level, $size);

        return true;
    }
}
