<?php
/*
 * @Descripttion:
 * @version:
 * @Author: zfc
 * @Date: 2020-10-13 15:32:38
 * @LastEditors: zfc
 * @LastEditTime: 2020-12-28 10:07:15
 */
/**
 * Created by PhpStorm.
 * User: BikeVR
 * Date: 2020/10/12
 * Time: 14:02
 * 鉴权页面（需要登陆）.
 */

namespace app\apihome\controller;

use think\Db;

class Home extends Base
{
    protected function _initialize()
    {
        header('Access-Control-Allow-Origin: *');
        header('Access-Control-Allow-Credentials : true');
        header('Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Connection, User-Agent, Cookie');
        parent::_initialize(); // TODO: Change the autogenerated stub
        //php 判断http还是https
        $pravetkey = '121232142';
        $this->onepagenum = 6;
        $http_type = ((isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') || (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https')) ? 'https://' : 'http://';
        //所有图片路径
        define(__DATAURL__, $http_type.$_SERVER['SERVER_NAME']);
        define(__UEDITORURL__, $http_type.$_SERVER['SERVER_NAME'].'/ueditor/');
        define(__HTTP__, $http_type);
        $header = $this->request->header();
        $token = $header['token'];
        /**if(!$token){
            _internalError('错误',501,'');
        }
        $t=JWT::decode($token,$pravetkey,array('HS256'));
         * **/
        $this->uid = 1;
        /* $this->time= $t->exp;
         if($this->time<time()){
             _internalError('登陆超时',501,'');
         }*/

        $nowuser = Db::name('user')->where('uid', $this->uid)->find();
        if (!$nowuser) {
            _internalError('信息错误', 501, '');
        }
    }

    //上传图片
    public function uploadc()
    {
        if ($_FILES['file']['name']) {
            $path = $this->upfile('file');
            $imgurl = '/uploads/user/imgs/'.$path;
        }
        if ($imgurl) {
            $data = [
                'img' => $imgurl,
                'status' => 1,
            ];
            _success('上传成功', 200, $data);

            return json(['code' => 1, 'msg' => '上传成功', 'data' => $data], 200);
        } else {
            _internalError('上传失败', 500, '');

            return json(['code' => 0, 'msg' => '上传失败'], 200);
        }
    }

    public function upfile($arr)
    {
        $file = request()->file($arr);
        $info = $file->move(ROOT_PATH.'/public/uploads/user/imgs');
        if ($info) {
            $dd = $info->getSaveName();
            $t = str_replace('\\', '/', $dd);

            return $t;
        } else {
            return false;
        }
    }
}
