<?php
/**
 * Created by PhpStorm.
 * User: BikeVR
 * Date: 2020/9/22
 * Time: 16:05
 * desc:登陆页面
 */
namespace app\apishop\controller;

use Firebase\JWT\JWT;
use think\Controller;
use think\Db;

class Suplogin extends Controller
{

    protected function _initialize()
    {
        $this->pracetkey='121232142';
        parent::_initialize(); // TODO: Change the autogenerated stub

    }
    /**
     * 获取jwt token
     * @param array $payload jwt载荷   格式如下非必须
     * [
     *  'iss'=>'jwt_admin',  //该JWT的签发者
     *  'iat'=>time(),  //签发时间
     *  'exp'=>time()+7200,  //过期时间
     *  'nbf'=>time()+60,  //该时间之前不接收处理该Token
     *  'sub'=>'www.admin.com',  //面向的用户
     *  'jti'=>md5(uniqid('JWT').time())  //该Token唯一标识
     * ]
     * eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiIiLCJpYXQiOjE2MDA4NDc5MzksImV4cCI6MTYwMTQ1MjczOSwianRpIjoiODM3MzM5ZTczMmEyZjdhYTQwMWQ0ZGMwYmU4NGU4NTkiLCJkYXRhIjoxfQ.TlWt8J0IY3RPy1eYk3o8rGH4ui452LyDHgvpIKaQj7c
     * @return bool|string
     */
    //***************************
    //  账号登录接口
    //***************************
    public function authlogin()
    {

        $uname = $_POST['uname']?$_POST['uname']:'';
        if (empty($uname)) {
            _internalError('用户名不能为空',500,'');

        }
        $pass = $_POST['pass']?$_POST['pass']:'';
        if (empty($pass)) {
            _internalError('密码不能为空',500,'');

        }
        $supuser   = array();
        $supuser['mobile|shopname|nickname'] = array('eq',$uname);
        $supuser['password'] = array('eq',MD5($pass));
        $id   = Db::name('supuser')->where($supuser)->value('sid');

        if ($id) {
            $data=array(
                "iss" => '',
                "iat" => time(),
                "exp" => time()+7*86400,
                "jti" => md5(uniqid('JWT').time()),
                "data" => $id
            );
            $t=JWT::encode($data,$this->pracetkey);
            _success('登陆成功',200,$t);

        } else {
            _internalError('登陆失败',500,'');

        }
    }




    //上传图片
    public function uploadc()
    {
        if ($_FILES['file']['name']) {
            $path = $this->upfile('file');
            $imgurl = '/uploads/user/imgs/' . $path;
        }
        if ($imgurl) {
            $data = array(
                'img' => $imgurl,
                'status' => 1
            );
            _success('上传成功',200,$data);
            return json(['code' => 1, 'msg' => '上传成功', 'data' => $data], 200);

        } else {
            _internalError('上传失败',500,'');
            return json(['code' => 0, 'msg' => '上传失败'], 200);
        }
    }

    public function upfile($arr)
    {
        $file = request()->file($arr);
        $info = $file->move(ROOT_PATH . '/public/uploads/user/imgs');
        if ($info) {
            $dd = $info->getSaveName();
            $t = str_replace('\\', '/', $dd);
            return $t;

        } else {
            return false;

        }
    }

    public function exp(){

        return $this->fetch();
    }

    public function getshoptype3(){
        $shop=Db::name('supuser')->select();
        foreach ($shop as $key=>$val){
           $good=Db::name('good')->where('sid',$val['sid'])->select();
           $goodshop=array_unique(array_column($good,'catid'));
            $new['type']='';
           if($goodshop){
              $newgood= implode(',',$goodshop);
              $new['type']=$newgood;
              //$res=Db::name('supuser')->where('sid',$val['sid'])->update($new);
           }

        }
        $shop2=Db::name('supuser')->select();
        _success('chengg',200,$shop2);
    }
    public function getshoptype(){
        $shop=Db::name('supuser')->select();
        foreach ($shop as $key=>$val){
            $types=Db::name('category')->where('id','in',$val['type'])->select();

            $goodshop=array_unique(array_column($types,'pid'));
            $new['type']='';
            if($goodshop){
                $newgood= implode(',',$goodshop);
                $new['type']=$newgood;
               // $res=Db::name('supuser')->where('sid',$val['sid'])->update($new);
            }

        }
        $shop2=Db::name('supuser')->select();
        _success('chengg',200,$shop2);
    }

    //获取所有分类
    public function getallshopcate(){
        $types=Db::name('category')->where('pid',0)->select();

        $data=array(
            'type'=>$types,
        );
        _success('获取成功',200,$data);
    }
    //获取所有分类
    public function getallcate(){
        $types=Db::name('category')->where('pid','<>',0)->select();
        foreach ($types as $key=>$val){
            $pidsname=Db::name('category')->where('id',$val['pid'])->value('catename');
          $types[$key]['catetitle']=$pidsname.'-'.$val['catename'];
        }
        $data=array(
            'type'=>$types,
        );
        _success('获取成功',200,$data);
    }
    //导入excel数据进数据库
    public function expinexcelzd()
    {
        $file = request()->file('file');
        if (!$file) {
            $this->error('没有文件上传');
        }
        $info = $file->validate(['size' => 15678000000, 'ext' => 'xlsx,xls,csv'])
            ->move(ROOT_PATH . 'public' . DS . 'excel');
        if ($info) {
            $exclePath = $info->getSaveName();  //获取文件名
            $file_name = ROOT_PATH . 'public' . DS . 'excel' . DS . $exclePath;   //上传文件的地址
            $data = $this->import_excel($file_name);
            /**foreach ($data as $key => $v) {
                $t[$key]['bianhao'] = $v['9'] ? $v['9'] : '';//关键词
                $t[$key]['sid'] = $v['10'] ? $v['10'] : '';//来源
                $t[$key]['title'] = $v['0'] ? $v['0'] : '';//来源
                $t[$key]['price'] = $v['3'] ? $v['3'] : '0.00';//来源
                $t[$key]['detail'] = $v['12'] ? $v['12'] : '';//来源
                $t[$key]['band'] = $v['2']?$v['2']: '';//来源
                $t[$key]['photo_x'] = $v['11'] ?$v['11'] : '';//来源
                $t[$key]['photo_string'] =$v['13'] ? $v['13'] : '';//来源
                $t[$key]['addtime']=time();
                $t[$key]['uptime']=time();
                if($v['1']){
                    $b=Db::name('category')->where('catename',$v['1'])->value('id');
                    if($b){
                        $t[$key]['catid'] = $b;//来源
                        //$res = Db::name('good')->insert($t[$key]);
                    }

                }

                   // $res = Db::name('supuser')->insert($t[$key]);

            }**/
            _success('chengg',200,$data);
        } else {
            die('文件错误');
        }
    }
    /**
     * 导入excel文件
     * @param  string $file excel文件路径
     * @return array        excel文件内容数组
     */
    function import_excel($file)
    {
        // 判断文件是什么格式
        $type = pathinfo($file);
        $type = strtolower($type["extension"]);
        if ($type == 'xlsx') {
            $type = 'Excel2007';
        } elseif ($type == 'xls') {
            $type = 'Excel5';
        }
        ini_set('max_execution_time', '0');
        // Vendor('PHPExcel.PHPExcel');
        import('PHPExcels.PHPExcel', EXTEND_PATH);
        //$objPHPExcel = new \PHPExcel();

        $objReader = \PHPExcel_IOFactory::createReader($type);
        $objPHPExcel = $objReader->load($file);
        $sheet = $objPHPExcel->getSheet(0);
        // 取得总行数
        $highestRow = $sheet->getHighestRow();
        // 取得总列数
        $highestColumn = $sheet->getHighestColumn();
        //总列数转换成数字
        $numHighestColum = \PHPExcel_Cell::columnIndexFromString("$highestColumn");
        //循环读取excel文件,读取一条,插入一条
        $data = array();
        //从第一行开始读取数据
        for ($j = 2; $j <= $highestRow; $j++) {
            //从A列读取数据
            for ($k = 0; $k < $numHighestColum; $k++) {
                //数字列转换成字母
                $columnIndex = \PHPExcel_Cell::stringFromColumnIndex($k);
                // 读取单元格
                $cell = $objPHPExcel->getActiveSheet()->getCell("$columnIndex$j")->getValue();
                //$cell = $objPHPExcel->getActiveSheet()->getCell('C2')->getValue();
                // 开始格式化
                if(is_object($cell)){
                    $cell= $cell->__toString();
                }
                $data[$j][]=$cell;
                //$data[$j][] = $objPHPExcel->getActiveSheet()->getCell("$columnIndex$j")->getValue();
            }
        }
        return $data;
    }




}
