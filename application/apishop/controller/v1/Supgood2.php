<?php
/**
 * Created by PhpStorm.
 * User: BikeVR
 * Date: 2020/9/22
 * Time: 16:05
 * desc:商品数据
 */

namespace app\apishop\controller;


use think\Db;

class Supgood extends Supbase
{
   public function _initialize()
       {
            parent::_initialize(); // TODO: Change the autogenerated stub
           $this->dbgood=db('good');
       }
      // 商品列表
   public  function index(){
       $sid=$this->sid;
       $cateid=intval($_REQUEST['catid']);//类型
       $where['is_delete']=1;
       $where['sid']=$sid;
       if($cateid){
           $where['catid']=$cateid;
       }
       $is_show=intval($_REQUEST['show'])?intval($_REQUEST['show']):1;//上下架
       if($is_show=='1'){
           $where['is_show']=1;
       }else{
           $where['is_show']=2;
       }
       $goodname=$_REQUEST['goodname'];
       if($goodname){
           $where['title']=array('like','%'.$goodname.'%');
       }
       $page = intval($_REQUEST['page'])?intval($_REQUEST['page']):1;
       $onepagenum=$this->onepagenum;
       $limit = intval($page-1)*$onepagenum;
       $goods=Db::name("good")->where($where)
           ->order('s_sort desc')->limit($limit.','.$onepagenum)->select();
       $goodscount=Db::name("good")
           ->where($where)
           ->order('sort desc')->count();
       foreach($goods as $key=>$val){
           $goods[$key]['pic']='';
           if($val['photo_x']){
               $img=explode(",", $val['photo_x']);
               $goods[$key]['pic']=__DATAURL__.$img[0];
           }
       }
       $data=array(
           'goods'=>$goods,
           'status'=>1,
           'goodscount'=>$goodscount?$goodscount:'0',
           'webtitle'=>'商品列表',
       );
       _success('获取成功',200,$data);


   }
   //商品详情
   public function goooddetail(){
       $goodid=intval($_REQUEST['goodid']);
       $sid=$this->sid;
       $good=$this->dbgood->where('id',$goodid)->where('sid', $sid)->find();
       $good['pid']=Db::name('category')->where('id',$good['catid'])->value('pid');
       if(!$good){
           _internalError('商品信息错误','500','');
       }
       $n=array();
       if($good['photo_x']){
           $img2=explode(",", $good['photo_x']);
               foreach ($img2 as $k => $v) {
                   $n[] = __DATAURL__.$v;
               }
       }
       $good['piccs']=$n;//图片集1
       //图片轮播数组
       $img=explode(',',trim($good['photo_string'],','));
       $b=array();
       if ($good['photo_string']) {
           foreach ($img as $k => $v) {
               if(strpos($v,'http') !== false) {
                   $b[] =$v;
               }else{
                   $b[] = __DATAURL__ . $v;
               }
           }
       }else{
           $b[] = '';
       }
       $good['img_arr']=$b;//图片轮播数组
       $content = str_replace('/ueditor/', __UEDITORURL__, $good['content']);
       $good['content']=html_entity_decode($content, ENT_QUOTES , 'utf-8');
       $data=array(
           'goods'=>$good,
           'webtitle'=>$good['title'].'商品信息',
       );
       _success('获取成功',200,$data);


   }
    //修改商品信息上下架，基础信息，图片，价格，排序
   public function editgood(){
       $dbgood=db('good');
       $goodid=intval($_POST["goodid"]);
       if(!$goodid){
           _internalError('信息错误','500','');
       }
       $sid=$this->sid;
       $good=$this->dbgood->where('id',$goodid)->where('sid', $sid)->find();
       if(!$good){
           _internalError('商品信息错误','500','');
       }

       $data['title']=$_POST["title"]?$_POST["title"]:$good['title'];//标题
       $data['band']=$_POST["band"]?$_POST["band"]:$good['band'];//品牌
       $data['is_show']=$_POST["show"]?$_POST["show"]:$good['is_show'];//上架:1上架，2:下架
       $data['is_delete']=$_POST["del"]?$_POST["del"]:$good['is_delete'];//删除:1未删除，2：已删除
       $data['price']=$_POST["price"]?$_POST["price"]:$good['price'];//价格
       $data['catid']=$_POST["catid"]?$_POST["catid"]:$good['catid'];//分类id
       $data['s_sort']=intval($_POST["s_sort"])?$_POST["s_sort"]:$good['s_sort'];//店铺内排序
       $data['photo_x']=$_POST["photo_x"]?$_POST["photo_x"]:$good['photo_x'];//图片
       $data['photo_x']=str_replace(__DATAURL__, "", $data['photo_x']);
       $data['detail']=$_POST["detail"]?$_POST["detail"]:$good['detail'];//简要描述
       $data['content']=$_POST["content"]?$_POST["content"]:$good['content'];//详细描述
       $data['photo_string']=$_POST["photo_string"]?$_POST["photo_string"]:$good['photo_string'];//详细图片
       $data['photo_string']=str_replace(__DATAURL__, "", $data['photo_string']);

       $data['uptime']=time();//修改时间
       $result=$dbgood->where('id',$goodid)->update($data);
       if($result){
           $info=$dbgood->where('id',$goodid)->find();
           $data2=array(
               'good'=>$info,
           );
           _success('修改成功',200,$data2);
           return json(['code'=>1,'msg'=>'修改成功','data'=>$data2],200);
       }else{
           _internalError('修改失败','500','');

       }
   }
    //添加商品
   public function addgood(){
       $data['sid']=$this->sid;//商家id
       $data['title']=_param('title','商品名称不能为空');//标题
       $data['band']=$_POST["band"];//品牌
       $data['is_show']=$_POST["show"]?$_POST["show"]:1;//上架:1上架，2:下架
       $data['is_delete']=$_POST["del"]?$_POST["del"]:1;//删除:1未删除，2：已删除
       $data['price']=_param('price','商品价格不能为空');//价格
       $data['catid']=_param('catid','分类必须填写');//分类id
       $data['s_sort']=intval($_POST["s_sort"])?$_POST["s_sort"]:1;//店铺内排序
       $data['photo_x']=_param('photo_x','商品图片不能为空');//图片
       $data['photo_x']=str_replace(__DATAURL__, "", $data['photo_x']);
       $data['detail']=$_POST["detail"];//简要描述
       $data['content']=$_POST["content"];//详细描述
       $data['photo_string']=$_POST["photo_string"];//详细图片
       $data['photo_string']=str_replace(__DATAURL__, "", $data['photo_string']);
       $data['uptime']=time();//修改时间
       $data['addtime']=time();//添加时间
       $gid=$this->dbgood->insertGetId($data);
       $result=$this->dbgood->where('id',$gid)->find();
       if($result){
           _success('添加成功',200);
       }
       _internalError('添加失败','400');
   }
   //添加规格
   public function addoption(){
      $dboption=db("good_option");
       $data['goodid']=intval($_POST["goodid"]);//商品id
       $data['title']=$_POST["title"];//标题
       $data['price']=$_POST["price"];//价格
       $gid=$dboption->insertGetId($data);
       $result=$dboption->where('id',$gid)->find();
       if($result){
           _success('添加成功',200);
       }
       _internalError('添加失败','400');
   }

   //规格列表
   public function option(){
       $dboption=db("good_option");
       $where['goodid']=intval($_POST["goodid"]);
       $goodsoption=$dboption->where($where)->select();
       _success('获取成功',200,$goodsoption);
   }
    //删除规格
    public function deloption(){
        $dboption=db("good_option");
        // $where['goodid']=intval($_POST["goodid"]);
        $where['id']=intval($_POST["optionid"]);
        $goodsoption=$dboption->where($where)->delete();
        if($goodsoption){
            _success('删除成功',200);
        }else{
            _internalError('未知错误');
        }

    }
   //编辑规格
    public  function editopt(){
        $dboption=db("good_option");
        $rebate=json_decode($_POST['rebate'],true);
        //_success('修改成功','200',$rebate);
        if(!$rebate){
            _internalError('信息错误');
        }
        $goodid=_param('goodid','信息错误');//商品id
        $good=$this->dbgood->where('id',$goodid)->find();
        if(!$good){
            _internalError('商品信息错误');
        }
        foreach($rebate as $v){
            $v["total"]=intval($v["total"]);
            $option_id=$v['id'];
            if($option_id){
                unset($v['id']);
                $result= $dboption->where(array("id"=>$option_id))->update($v);
            }else{
                $v["goodid"]=$goodid;
                $result= $dboption->insert($v);
            }
        }
        //$opid=intval($_POST["opid"]);//规格id
       // $data['title']=$_POST["title"];//标题
       // $data['price']=$_POST["price"];//价格
       // $result=$dboption->where('id',$opid)->update($data);
        if($result){
            _success('修改成功','200','');
            return json(['code'=>1,'msg'=>'修改成功'],200);
        }else{
            _internalError('修改失败','500','');
            return json(['code'=>0,'msg'=>'修改失败'],400);
        }
    }

    //商户主营类目
    public function cate(){
        $sid=$this->sid;
        $shop=Db::name('supuser')->where('sid',$sid)->find();
        if($shop['type']){
         $type=explode(",", $shop['type']);
         $types=Db::name('category')->where('id','in',$type)->select();

            $data=array(
                'type'=>$types,
            );
             _success('获取成功',200,$data);
        }
            _internalError('商户未填写类型','500');
        }
    //获取当前类型下级分类
    public function getcate(){
    $tid=intval(input('tid'));
    $types=Db::name('category')->where('pid',$tid)->select();
    if($types){
        _success('获取成功',200,$types);
    }
    }

}