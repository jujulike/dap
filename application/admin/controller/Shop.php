<?php
/**
 * Created by PhpStorm.
 * User: BikeVR
 * Date: 2020/10/13
 * Time: 10:40.
 */

namespace app\admin\controller;

use think\Db;

class Shop extends Admin
{
    public function _initialize()
    {
        return parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /*
     * 商家列表
     */
    public function index()
    {
        $map['sid'] = ['>', '0'];
        $cateid = input('cateid');
        $keyword = input('keyword');
        if ($keyword) {
            $map['shopname'] = ['like', '%'.(string) $keyword.'%'];
        }
        $status = input('status');
        if ($status) {
            $map['status'] = $status;
            $this->assign('status', $status);
        }
        if ($cateid) {
            $map['type'] = ['like', '%'.$cateid.'%'];
            $this->assign('cateid', $cateid);
        }
        $list = $this->lists('Supuser', $map, 'sid desc');
        foreach ($list as $key => $val) {
            $where['is_delete'] = ['eq', 0];
            $where['id'] = ['in', $val['type']];
            $category = Db::name('category')->where($where)->column('catename');
            $list[$key]['catename'] = implode(' || ', $category);
            if ($cateid) {
                if (!in_array($cateid, explode(',', $val['type']))) {
                    unset($list[$key]);
                }
            }
        }
        $category = Db::name('category')->where(['is_delete' => 0, 'pid' => ''])->select();
        $this->assign('category', $category);
        $this->assign('_list', $list);
        $this->assign('meta_title', '商家管理');

        return $this->fetch();
    }

    /*
     *
     *商品【添加、编辑】
     */
    public function addshop()
    {
        $model = Db::name('Supuser');
        $id = input('id');

        if (request()->isPost()) {
            $ids = $_POST['sid'];
            $data = $_POST;
           
            $data['sort'] = intval($data['sort']); //排序

            //营业执照
            if ($data['license']) {
                $data['license'] = implode(',', $data['license']);
            }
            //封面图
            if ($data['bigpic']) {
                $data['bigpic'] = implode(',', $data['bigpic']);
            }
            //店铺图
            if ($data['piccs']) {
                $data['piccs'] = implode(',', $data['piccs']);
            }
            //分类
            if ($data['type']) {
                $data['type'] = implode(',', $data['type']);
            }
            //物流
            if ($data['malltype']) {
                $data['malltype'] = implode(',', $data['malltype']);
            }
            if ($_FILES['mypic']['name']) {
                $path = $this->upfile('mypic');
                $data['headimgurl'] = '/upload/images/'.$path;
            }
            if ($ids) {//如果存在 就是修改
                $map['sid'] = $ids;
                if (!empty($data['password'])) {
                    $data['password'] = md5($data['password']);
                }

                $up = $model->where($map)->update($data);
            } else {  //添加
                $data['addtime'] = time();
                $data['password'] = md5($data['password']);

                unset($data['sid']);
                $ids = $model->insertGetId($data);
                // if($ids){
                //     if($rebate){
                //         foreach($rebate as $v){
                //             $v["goodid"]=$ids;
                //             $v["total"]=intval($v["total"]);
                //             Db::name("Good_option")->insert($v);
                //         }
                //     }
                // }
            }
            action_log('updata_shop', 'shop', $ids, UID); //记录行为
            $this->success('操作成功', 'index');
        }
        $type = [];
        $malltype = [];
        if ($id) {
            $item = $model->where('sid', $id)->find();
            $license = [];
            //if ($item['license']) {
            $license = $item['license'] ? explode(',', $item['license']) : [];
            // }

            $type = explode(',', $item['type']);
            $malltype = explode(',', $item['malltype']);
            $bigpic = $item['bigpic'] ? explode(',', $item['bigpic']) : [];
            $piccs = $item['piccs'] ? explode(',', $item['piccs']) : [];

            $this->assign([
                'item' => $item,
                'meta_title' => '编辑商品',
                'license' => $license,
                'type' => $type,
                'malltype' => $malltype,
                'bigpic' => $bigpic,
                'piccs' => $piccs,
            ]);
        // $catname = Db::name('category')->where(['is_delete'=>0,'id'=>$item['catid']])->find();
            // $item['categorypid']=$catname['pid'];
            // if($item['photo_string']){
            //     $photo_string=explode(",", $item['photo_string']);
            // }
            // if($item['groupendtime']){
            // 	$item['groupendtime']=date("Y-m-d H:i:s",$item['groupendtime']);
            // }
            // $option=Db::name("Good_option")->where("goodid",$id)->select();

            // $this->assign('photo_string',$photo_string);
            // $this->assign('option',$option);
        } else {
            $this->assign([
                'type' => $type,
                'malltype' => $malltype,
            ]);
            $this->assign('meta_title', '添加商品');
        }
        $category = Db::name('category')->where(['is_delete' => 0, 'pid' => ''])->select();

        $this->assign('category', $category);

        return $this->fetch();
    }
}
